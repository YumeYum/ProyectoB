//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication9.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Web.Mvc;

    public partial class oportunidades
    {

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public oportunidades()
        {
            this.actividad = new HashSet<actividad>();
            this.fecha_creacion = System.DateTime.Now;
            this.fecha_vencimiento = System.DateTime.Now;
        }

        public int id { get; set; }

        [Display(Name = "ID Contacto Empresa")]
        [Required(ErrorMessage = "Seleccione Empresa")]
        [Range(1, int.MaxValue, ErrorMessage = "Seleccione Contacto")]
        public int id_contacto_empresa { get; set; }
        [Display(Name = "ID Usuario")]
        [Required(ErrorMessage = "Seleccione Usuario")]
        public int id_contacto_asignado { get; set; }
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]
        [Display(Name = "Fecha de creación")]
        [Required(ErrorMessage = "Debe seleccionar Fecha de Creación")]
        public System.DateTime fecha_creacion { get; set; }

        [DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]
        [Display(Name = "Fecha de vencimiento")]
        [Required(ErrorMessage = "Debe seleccionar Fecha de Vencimiento")]
        public System.DateTime fecha_vencimiento { get; set; }

        [Display(Name = "Cupos")]
        [Range(0, 100, ErrorMessage = "Los cupos deben estar entre 0 y 100")]
        [DataType(DataType.Text)]
        public int cupos { get; set; }


        [Display(Name = "Tema")]
        [Required(ErrorMessage = "Debe seleccionar Tema")]
        public string tema { get; set; }
        [Display(Name = "Estado")]
        public string estado { get; set; }
        public bool isSelected { get; set; }

        public List<SelectListItem> Temas = new List<SelectListItem>()
        {       new SelectListItem() {Text="Cupo", Value="cupo"},
                new SelectListItem() { Text="Financiamiento", Value="financiamiento"},
                new SelectListItem() { Text="Otro", Value="otro"}
        };

        public List<SelectListItem> Estados = new List<SelectListItem>()
        {
                new SelectListItem() {Text="Lograda", Value="lograda"},
                new SelectListItem() { Text="Activa", Value="activa"},
                new SelectListItem() { Text="Perdida", Value="perdida"}
        };

        public List<usuario> usuarioList;
        public List<contacto_empresa> contacto_empresaList;

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<actividad> actividad { get; set; }
        public virtual contacto_empresa contacto_empresa { get; set; }
        public virtual usuario usuario { get; set; }

        public List<SelectListItem> usuarioListI { get; internal set; }
        public List<SelectListItem> contacto_empresaListI { get; internal set; }
        public List<empresa> EmpresaModel { get; set; }



    }
}