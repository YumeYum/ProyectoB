@model WebApplication9.Models.contactos
   @*Son necesarios?*@
<script src="~/Content/Scripts/jquery.validate.min.js"></script>
<script src="~/Content/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Content/Scripts/moment.js"></script>
<script src="~/Content/Scripts/jquery-ui.js"></script>
<style>
    .ui-dialog-title {
        font-size: 120%;
    }
     .control-label {
        font-weight: bold;
    }
</style>
@using (Ajax.BeginForm(null, null, new AjaxOptions { HttpMethod = "POST" }, new { id = "formContacto" }))
{


    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.rut, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rut, new { htmlAttributes = new { @class = "form-control", required = "required", onchange = "checkRut(this)" } })
                @Html.ValidationMessageFor(model => model.rut, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nombres, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombres, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.nombres, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.apellidos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.apellidos, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.apellidos, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tcel, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tcel, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.tcel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.comentario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.comentario, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.comentario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.curriculum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div><input type="file" name="file" id="file" /></div>
                @Html.ValidationMessageFor(model => model.curriculum, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<script>

    $('#formContacto').on("submit", function (e) {
        e.preventDefault();
        var contactoModel = {
            id: $('#id').val(),
            rut: $('#rut').val(),
            nombres: $('#nombres').val(),
            apellidos: $('#apellidos').val(),
            tcel: $('#tcel').val(),
            email: $('#email').val(),
            comentario: $('#comentario').val(),
        };
        var $form = $("#formContacto");
        $.validator.unobtrusive.parse($form);


        if ($form.valid()) {
            $.ajax({
                type: "POST",
                url: "/Contactos/Edit_Contacto",
                content: "application/json; charset=utf-8",
                dataType: "json",
                data: $form.serialize(),
                success: function (response) {

                    alert('Registro ingresado con éxito');

                    if ($('#my-dialogEmpresa').dialog('isOpen') == true) {
                        var id_empresa = '@ViewBag.id_empresa';
                        $('#my-dialogEmpresa').load('/Empresas/Details_Empresa/' + id_empresa, function () {
                            $(this).dialog('open');
                        });
                    }

                    if ($('#my-dialog2').dialog('isOpen') == true) {
                        $('#my-dialog2').dialog('close');
                    }
                    else {
                        location.reload();
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    alert('Error!!');
                }
            });
        }


    });


        function checkRut(rut) {
    // Despejar Puntos
    var valor = rut.value.replace('.','');
    // Despejar Guión
    valor = valor.replace('-','');

    // Aislar Cuerpo y Dígito Verificador
    cuerpo = valor.slice(0,-1);
    dv = valor.slice(-1).toUpperCase();

    // Formatear RUN
    rut.value = cuerpo + '-'+ dv

    // Si no cumple con el mínimo ej. (n.nnn.nnn)
    if(cuerpo.length < 7) {rut.setCustomValidity("RUT Incompleto"); return false;}

    // Calcular Dígito Verificador
    suma = 0;
    multiplo = 2;

    // Para cada dígito del Cuerpo
    for(i=1;i<=cuerpo.length;i++) {

            // Obtener su Producto con el Múltiplo Correspondiente
            index = multiplo * valor.charAt(cuerpo.length - i);

        // Sumar al Contador General
        suma = suma + index;

        // Consolidar Múltiplo dentro del rango [2,7]
        if(multiplo < 7) {multiplo = multiplo + 1; } else {multiplo = 2; }

    }

    // Calcular Dígito Verificador en base al Módulo 11
    dvEsperado = 11 - (suma % 11);

    // Casos Especiales (0 y K)
    dv = (dv == 'K')?10:dv;
    dv = (dv == 0)?11:dv;

    // Validar que el Cuerpo coincide con su Dígito Verificador
    if(dvEsperado != dv) {rut.setCustomValidity("RUT Inválido"); return false; }

    // Si todo sale bien, eliminar errores (decretar que es válido)
    rut.setCustomValidity('');

    }

        $(function () {
            $.validator.methods.date = function (value, element) {
                return this.optional(element) || moment(value, "DD-MM-YYYY", true).isValid();
            }
        });



    $("#my-dialog2").dialog('option', 'title', 'Editar Contacto');
    $("#my-dialogContactos").dialog('option', 'title', 'Editar Contacto');
</script>
<div>
    @Html.ActionLink("Volver al índice", "/Index_Contacto")
</div>
